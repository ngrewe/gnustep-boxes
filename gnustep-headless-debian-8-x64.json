{
    "description": "GNUstep Virtual Development Environment",
    "variables": {
        "cpus": "2",
        "basename": "gnustep-debian-8-x64",
        "template_name": "gnustep-headless-debian-8-x64",
        "memory": "3072",
        "disk_size": "40960",
        "ssh_port": "22",
        "ssh_wait_timeout": "10000s",
        "build_headless": "true",
        "netinst_url": "http://cdimage.debian.org/debian-cd/8.8.0/amd64/iso-cd/debian-8.8.0-amd64-netinst.iso",
        "netinst_sha512": "27e41f13ce0f71e0fc503da41f3afa87285e0fc2e8ffb8d7ff4f572e26451dafd1a6f220c9256731d451400893437b0dfc17534c441f2a29a81130c59f790a50",
        "locale": "en_US",
        "keymap": "us",
        "atlas_artifact": "ngrewe/gnustep-headless",
        "atlas_version": "0.0.{{isotime \"20060102\"}}",
        "atlas_description": "A basic set of tools for GNUstep development, based on Debian 8.",
        "container_flavour": "dev",
        "container_tag": "{{isotime \"20060102\"}}",
        "docker_hub_username": "ngrewe",
        "docker_hub_email": "{{env `DOCKER_HUB_EMAIL`}}",
        "docker_hub_password": "{{env `DOCKER_HUB_PASSWORD`}}"

    },
    "builders": [
        {   "type": "vmware-iso",
            "boot_command":  [
                "<esc><wait>",
                "install <wait>",
                "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg <wait>",
                "debian-installer={{user `locale`}} <wait>",
                "auto <wait>",
                "locale={{user `locale`}} <wait>",
                "kbd-chooser/method=us <wait>",
                "netcfg/get_hostname={{ .Name }} <wait>",
                "netcfg/get_domain=vagrantup.com <wait>",
                "fb=false <wait>",
                "debconf/frontend=noninteractive <wait>",
                "console-setup/ask_detect=false <wait>",
                "console-keymaps-at/keymap={{user `keymap`}} <wait>",
                "keyboard-configuration/xkb-keymap={{user `keymap`}} <wait>",
                "<enter><wait>"
            ],
            "boot_wait": "30s",
            "disk_size": "{{user `disk_size`}}",
            "guest_os_type": "debian8-64",
            "http_directory": "packer/http",
            "iso_url": "{{user `netinst_url`}}",
            "iso_checksum_type": "sha512",
            "iso_checksum": "{{user `netinst_sha512`}}",
            "shutdown_command": "echo 'vagrant' | sudo -S /sbin/shutdown -hP now",
            "ssh_port": "{{user `ssh_port`}}",
            "ssh_wait_timeout": "{{user `ssh_wait_timeout`}}",
            "ssh_username": "vagrant",
            "ssh_password": "vagrant",
            "headless": "{{user `build_headless`}}",
            "tools_upload_flavor": "linux",
            "vm_name": "{{user `basename`}}",
            "output_directory": "output-{{user `template_name`}}-vmware",
            "vmx_data": {
                "cpuid.coresPerSocket": "1",
                "memsize": "{{user `memory`}}",
                "numvcpus": "{{user `cpus`}}"
            }
        },
        {
            "type": "virtualbox-iso",
            "boot_command":  [
                "<esc><wait>",
                "install <wait>",
                "preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg <wait>",
                "debian-installer={{user `locale`}} <wait>",
                "auto <wait>",
                "locale={{user `locale`}} <wait>",
                "kbd-chooser/method=us <wait>",
                "netcfg/get_hostname={{ .Name }} <wait>",
                "netcfg/get_domain=vagrantup.com <wait>",
                "fb=false <wait>",
                "debconf/frontend=noninteractive <wait>",
                "console-setup/ask_detect=false <wait>",
                "console-keymaps-at/keymap={{user `keymap`}} <wait>",
                "keyboard-configuration/xkb-keymap={{user `keymap`}} <wait>",
                "<enter><wait>"
            ],
            "boot_wait": "30s",
            "hard_drive_interface": "sata",
            "disk_size": "{{user `disk_size`}}",
            "guest_additions_path": "VBoxGuestAdditions_{{.Version}}.iso",
            "guest_os_type": "Debian_64",
            "http_directory": "packer/http",
            "iso_url": "{{user `netinst_url`}}",
            "iso_checksum_type": "sha512",
            "iso_checksum": "{{user `netinst_sha512`}}",
            "shutdown_command": "echo 'vagrant' | sudo -S /sbin/shutdown -hP now",
            "ssh_port": "{{user `ssh_port`}}",
            "ssh_wait_timeout": "{{user `ssh_wait_timeout`}}",
            "ssh_username": "vagrant",
            "ssh_password": "vagrant",
            "headless": "{{user `build_headless`}}",
            "vm_name": "{{user `basename`}}",
            "output_directory": "output-{{user `template_name`}}-vbox",
            "vboxmanage": [
                [ "modifyvm", "{{.Name}}", "--memory", "{{user `memory`}}" ],
                [ "modifyvm", "{{.Name}}", "--cpus", "{{user `cpus`}}" ]
            ],
            "virtualbox_version_file": ".vbox_version",
            "vm_name": "{{user `basename`}}"
        },
        {
            "type": "docker",
            "image": "debian:jessie",
            "volumes": {
                "{{pwd}}": "/vagrant"
            },
            "commit": true
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "environment_vars": [
                "CONTAINER_FLAVOUR={{user `container_flavour`}}"
            ],
            "execute_command": "echo 'vagrant'|sudo -S env {{ .Vars }} sh -eux '{{.Path}}'",
            "scripts": [
                "packer/scripts/00-packages.sh"
            ],
            "override": {
               "docker": {
                   "scripts": [
                       "packer/scripts/docker/00-packages.sh",
                       "packer/scripts/00-packages.sh"
                   ],
                   "execute_command" : "env {{ .Vars }} sh -eux '{{.Path}}'"
               }
            }
        },
        {
            "type": "shell",
            "execute_command": "echo 'vagrant'|sudo -S sh -eux '{{.Path}}'",
            "scripts": [
                "packer/scripts/00-vagrant.sh",
                "packer/scripts/01-sshd.sh"
            ],
            "only": [ "vmware-iso", "virtualbox-iso"]
        },
        {
            "type": "shell",
            "execute_command": "echo 'vagrant'|sudo -S sh '{{.Path}}'",
            "override": {
                "vmware-iso": {
                    "scripts": [
                        "packer/scripts/vmware/01-vmtools.sh"
                    ]
                },
                "virtualbox-iso": {
                    "scripts": [
                        "packer/scripts/vbox/01-vmtools.sh"
                    ]
                }
            },
            "only": [ "vmware-iso", "virtualbox-iso"]
        },
        {
            "type": "file",
            "source": "libobjc2",
            "destination": "/vagrant/libobjc2",
            "except": [ "docker" ]
        },
        {
            "type": "file",
            "source": "libdispatch",
            "destination": "/vagrant/libdispatch",
            "except": [ "docker" ]
        },
        {
            "type": "file",
            "source": "gnustep-make",
            "destination": "/vagrant/gnustep-make",
            "except": [ "docker" ]
        },
        {
            "type": "file",
            "source": "gnustep-base",
            "destination": "/vagrant/gnustep-base",
            "except": [ "docker" ]
        },
        {
            "type": "ansible",
            "playbook_file": "provisioning/site.yml",
            "groups": "headless",
            "user": "vagrant",
            "override": {
                "docker": {
                    "extra_arguments": [ "--skip-tags=gdomap" ],
                    "groups": "headless,docker-{{user `container_flavour`}}"
                }
            }
        },
        {
            "type": "shell",
            "environment_vars": [
                "CONTAINER_FLAVOUR={{user `container_flavour`}}"
            ],
            "execute_command":
              "echo 'vagrant'|sudo -S env {{ .Vars }} sh -eux '{{.Path}}'",
            "scripts": [
                "packer/scripts/98-grub.sh",
                "packer/scripts/99-cleanup.sh"
            ],
            "override": {
               "docker": {
                   "scripts": [
                       "packer/scripts/docker/99-cleanup.sh",
                       "packer/scripts/99-cleanup.sh"
                   ],
                   "execute_command" : "env {{ .Vars }} sh -eux '{{.Path}}'"
               }
            }
        }
    ],
    "post-processors": [
        [
            {
                "type": "vagrant",
                "output": "builds/{{user `template_name`}}-{{.Provider}}.box",
                "keep_input_artifact": true,
                "only": ["virtualbox-iso", "vmware-iso"]
            },
            {
                "type": "vagrant-cloud",
                "only": ["vmware-iso", "virtualbox-iso"],
                "box_tag": "{{user `atlas_artifact`}}",
                 "version": "{{user `atlas_version`}}",
                 "version_description": "{{user `atlas_description`}}"
            }
        ],
        [
            {
                "type": "docker-tag",
                "repository": "ngrewe/gnustep-headless-{{user `container_flavour`}}",
                "tag": "{{user `container_tag`}}",
                "only": [ "docker" ]
            },
            {
                "type": "docker-push",
                "login": false,
                "login_username": "{{user `docker_hub_username`}}",
                "login_email": "{{user `docker_hub_email`}}",
                "login_password": "{{user `docker_hub_password`}}",
                "only": [ "docker" ]
            }
       ],
       [
           {
               "type": "docker-tag",
               "repository": "ngrewe/gnustep-headless-{{user `container_flavour`}}",
               "tag": "latest",
               "force": true,
               "only": [ "docker" ]
           },
           {
               "type": "docker-push",
               "login":false,
               "login_username": "{{user `docker_hub_username`}}",
               "login_email": "{{user `docker_hub_email`}}",
               "login_password": "{{user `docker_hub_password`}}",
               "only": [ "docker" ]
           }
      ]
    ]
}
